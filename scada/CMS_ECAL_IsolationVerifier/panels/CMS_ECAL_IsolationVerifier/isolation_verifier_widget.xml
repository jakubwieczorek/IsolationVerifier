V 14
2
LANG:10001 0 
LANG:1 0 
PANEL,-1 -1 563 140 N "_3DFace" 0
"main()
{
  populateTable(\"System1:ADC_CH1\");
}
" 0
 E E E E 1 -1 -1 0  -50.0574688465293 156.5
""0  1
E "
// colors
const string BAD_COLOR      = \"FwStateAttention3\";
const string GOOD_COLOR     = \"white\";

// TABLE columns
const string COLUMN_SENSOR   = \"SENSOR\";
const string COLUMN_VALUE    = \"VALUE\";
const string COLUMN_MEAN     = \"MEAN\";
const string COLUMN_LIMIT    = \"LIMIT\";

// other constants & declarations
const string FLOAT_FORMAT = \"%.2f\";

public void populateTable(const string &aSensorName)
{
    dpConnect(\"__CB_SensorStatusChanged\", aSensorName + \".value.converted\");
}

private void __CB_SensorStatusChanged(const string &aSensorValueDp, const float &aSensorValue)
{
  string sensorName = dpSubStr(aSensorValueDp, DPSUB_DP);

  float limit; dpGet(sensorName + \".limit.converted\", limit);
  float mean;  dpGet(sensorName + \".mean.converted\" , mean);

  string colorStatus = \"white\";

  if(aSensorValue > limit)
  {
    colorStatus = \"FwStateAttention2\";
  }

  if(mean > limit)
  {
    colorStatus = \"FwStateAttention3\";;
  }

  dyn_string S_SensorName  = makeDynString(sensorName                 , colorStatus);
  dyn_string S_SensorValue = makeDynString(__formatFloat(aSensorValue), colorStatus);
  dyn_string S_Mean        = makeDynString(__formatFloat(mean)       , colorStatus);
  dyn_string S_Limit       = makeDynString(__formatFloat(limit)       , colorStatus);

  TABLE1.updateLine(1, COLUMN_SENSOR, S_SensorName, COLUMN_VALUE, S_SensorValue
                     , COLUMN_MEAN,   S_Mean,       COLUMN_LIMIT, S_Limit);

}

private string __formatFloat(const float &aValue)
{
  string stringValueConverted;
  sprintf(stringValueConverted, FLOAT_FORMAT, aValue);
  return stringValueConverted;
}
" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:10001 0 
6 4
"RECTANGLE1"
""
1 0.06298377571567493 0 E E E 1 E 1 E N "_WindowText" E N {135,135,202} E E
 E E
3 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E -1 1 1 0 1 E 0.7472090069634042 0 0.6333333333333333 9.942531153470696 10 1 E 0 0 696 30
2 5
"PRIMITIVE_TEXT1"
"BAR"
1 21.04875079821204 20 E E E 1 E 1 E N "white" E N "_Transparent" E E
 E E
4 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 0 1 E U  0 E 15.04875079821204 13 342 29
0 2 0 "0s" 0 0 0 64 0 0  15.04875079821204 13 1
2
LANG:10001 26 Arial,-1,13,5,50,0,0,0,0,0
LANG:1 26 Arial,-1,13,5,50,0,0,0,0,0
0 2
LANG:10001 20 Water leakage sensor
LANG:1 20 Water leakage sensor
25 6
"TABLE1"
"TABLE"
1 14.09448818897638 39.61904761904763 E E E 1 E 1 E N "_WindowText" E N "white" E E
 E E
5 0 0 0 0 0
E E E
0
2
LANG:10001 0 
LANG:1 0 

1
"layoutAlignment" "AlignNone"
2
LANG:10001 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:1 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
0  8 30.00000000000001 532 82
EE 1 0 1 4 0 "SENSOR" 40 1 0 "s" 2
LANG:10001 6 Sensor
LANG:1 6 Sensor
E
2
LANG:10001 0 
LANG:1 0 

330 "VALUE" 6 1 0 "[0s,,,AlignHCenter]" 2
LANG:10001 5 Value
LANG:1 5 Value
E
2
LANG:10001 0 
LANG:1 0 

60 "MEAN" 6 1 0 "[0s,,,AlignHCenter]" 2
LANG:10001 4 Mean
LANG:1 4 Mean
E
2
LANG:10001 0 
LANG:1 0 

60 "LIMIT" 7 1 0 "[0s,,,AlignHCenter]" 2
LANG:10001 5 Limit
LANG:1 5 Limit
E
2
LANG:10001 0 
LANG:1 0 

68 
20 20 10 0
2
LANG:10001 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:1 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
0 0 1 1 1 7
1 0
0
LAYER, 1 
1
LANG:10001 0 
0
LAYER, 2 
1
LANG:10001 0 
0
LAYER, 3 
1
LANG:10001 0 
0
LAYER, 4 
1
LANG:10001 0 
0
LAYER, 5 
1
LANG:10001 0 
0
LAYER, 6 
1
LANG:10001 0 
0
LAYER, 7 
1
LANG:10001 0 
0
0
